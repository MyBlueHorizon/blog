{"title":"Minecraft 1.20 互通服务器搭建记录","date":"2023-06-13T12:27:10.000Z","source":"_posts/Minecraft-1-20-互通服务器搭建记录.md","raw":"---\ntitle: Minecraft 1.20 互通服务器搭建记录\ndate: 2023-06-13 20:27:10\ntags: [技术,Minecraft,服务器,游戏]\n---\n## 准备\n\n### 前言\n\n自上一次搭建 Minecraft 服务器已经过去很长时间了，这段时间内 Minecraft 与社区发生了很大的变化，但抛下各种纷扰，高版本互通服务器确实充满吸引力，也因此开启了这一旅程。\n\n### 概况\n\n#### 版本与服务端选择\n\n为了实现 Java 与基岩端的互通，版本只能选择最新版本（事实上，可以通过相关插件来搭建旧版服务器，但显然会降低体验）。在高版本 Minecraft 下，官方原版服务端的性能并不佳，而 Paper 之类的插件端作为传统选择比较适宜，但本次接触到了 Fabric 这个涵盖了服务端和客户端的新一代加载器，并且这一加载器具有较多的优化 Mod 和其它辅助类 Mod，故选择 Fabric 服务端。\n\n### Java 选择\n\n在 1.17 或更高版本上，Mojang 将 Minecraft Java 版的最低 Java 版本提升到了 Java 17。这意味着 Java 的安装也不像过去直接下载即可。同时，各类的 JDK 纷纷出现，而本次选择具有较好性能表现的 Alibaba Dragonwell 17。\n\n#### 愿景\n\n本次目的是实现 1.20 下的 Java 端与基岩端的互联，实现无缝切换的体验，同时使服务器对于玩家的安全性和便利性有所提升，服务器流畅运行。\n\n## 实践\n\n### Java 下载与安装\n\n#### Java 下载\n\n阿里在 GitHub 上提供了 Alibaba Dragonwell 17 的二进制发行版本，但下载速度缓慢，而 Wiki 页提供了[镜像源](https://github.com/dragonwell-project/dragonwell17/wiki/Mirrors-for-download-(%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F))。  \n对于一般 Windows 用户，选择 Alibaba_Dragonwell_Standard_jdk-17.x.x.x.x+x_x64_windows.zip 下载即可。\n\n#### Java 安装\n\n对于 Oracle Java，其一键式的安装程序会解决大部分问题，但对于此，需要解压并设置环境变量手动安装。\n在 `系统属性` 里的 `高级` 选项卡，你可以找到环境变量设置。在用户变量的 `Path` 处点击编辑，新建值为 `“解压后的位置”\\bin` 的变量即可。（注意，这里假定你之前从未安装过 Java，如果你安装过，请自行寻找如何更改 Java 默认版本。\n\n### 服务端安装与初期配置\n\n#### 服务端安装\n\nFabric 为我们提供了一键式的安装体验。我们只需前往其[下载页面](https://fabricmc.net/use/installer/)，选择服务端安装选项并按照页面提示创建启动脚本，运行启动脚本稍后会自动完成安装。\n\n#### 初期配置\n\n为了最大化减少性能占用同时保障游戏体验，`view-distance` 被设置为 `4` ，同时为了保障正版玩家的体验 `online-mode` 被设置为 `true`。同时为了保障安全性，白名单也设置为开启。  \n至此，尝试运行并加入，一切正常。\n\n### Mod 选择\n\n#### 功能性 Mod 选择\n\n为了实现 Java 版与基岩版的互通，我们选择并下载了 [Gersey 及 Floodgate](https://geysermc.org/download) 作为基岩端的协议翻译与用户鉴权。注意，请在下载页面选择 Fabric 选项卡下载，之后拖入 `mods` 文件夹即可。  \n为了实现正版用户与离线玩家同时在线，我们选择 [EasyAuth](https://modrinth.com/mod/easyauth) 作为 Java 端的用户鉴权。注意，这一 Mod 依赖于 [Fabric API](https://modrinth.com/mod/fabric-api)，请一并安装。\n\n#### 优化性 Mod 选择\n\n为了优化服务器，添加了以下 Mod。\n\n- [Lithium](https://modrinth.com/mod/lithium)\n- [Starlight](https://modrinth.com/mod/starlight)\n- [Krypton](https://modrinth.com/mod/krypton)\n- [FerriteCore](https://modrinth.com/mod/ferrite-core)\n\n同时，这些 Mod 也可以考虑安装\n\n- [Concurrent Chunk Management Engine](https://modrinth.com/mod/c2me-fabric)\n- [Very Many Players](https://modrinth.com/mod/vmp-fabric)\n\n### 后期配置\n\n#### Gersey 配置\n\nGersey 的配置文件为 `\\config\\Geyser-Fabric\\config.yml`。这里唯一需要修改的是 `auth-type` 项，应被修改为 `floodgate`。其余选项可以按需修改。\n\n#### Floodgate 配置\n\nGersey 的配置文件为 `\\config\\floodgate\\config.yml`。我们需要进行以下操作。\n\n1. 修改 `player-link` 下的 `require-link` 与 `enable-own-linking` 为 `true`。\n2. 下载 [SQLite 扩展](https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/master/)（`floodgate-sqlite-database.jar`），并放置于配置文件同目录下。\n\n#### EasyAuth 配置\n\nGersey 的配置文件为 `\\mods\\EasyAuth\\config.json`。这里唯一需要修改的是 `floodgateAutologin` 项，应被修改为 `true`。其余选项可以按需修改。\n\n## 结束\n\n### 测试服务器\n\n此时对服务器进行测试，正版登录与离线模式（需手动编辑白名单文件）都可以登入，基岩版用户在 [Global Link](https://link.geysermc.org/) 绑定账号后可以直接登入。对于其它未绑定的基岩版玩家，可以手动编辑 `\\config\\floodgate\\` 下的数据库文件，手动录入玩家登入时服务台控制台显示的 XUID 和应该具有的 UUID 与游戏名。服务器在 JVM 预热完成后占用较低，相对流畅。\n\n### 最后的话\n\n显然，这个解决方案依然具有不完善之处，比较明显的正如`测试服务器`一节中所写。这些问题依然需要日后的探索。\n","slug":"Minecraft-1-20-互通服务器搭建记录","published":true,"updated":"2025-08-02T11:19:50.798Z","_id":"cmdu5uvrg0005vk7z8bhtd6mt","comments":true,"layout":"post","photos":[],"html":"<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>自上一次搭建 Minecraft 服务器已经过去很长时间了，这段时间内 Minecraft 与社区发生了很大的变化，但抛下各种纷扰，高版本互通服务器确实充满吸引力，也因此开启了这一旅程。</p>\n<h3 id=\"概况\"><a href=\"#概况\" class=\"headerlink\" title=\"概况\"></a>概况</h3><h4 id=\"版本与服务端选择\"><a href=\"#版本与服务端选择\" class=\"headerlink\" title=\"版本与服务端选择\"></a>版本与服务端选择</h4><p>为了实现 Java 与基岩端的互通，版本只能选择最新版本（事实上，可以通过相关插件来搭建旧版服务器，但显然会降低体验）。在高版本 Minecraft 下，官方原版服务端的性能并不佳，而 Paper 之类的插件端作为传统选择比较适宜，但本次接触到了 Fabric 这个涵盖了服务端和客户端的新一代加载器，并且这一加载器具有较多的优化 Mod 和其它辅助类 Mod，故选择 Fabric 服务端。</p>\n<h3 id=\"Java-选择\"><a href=\"#Java-选择\" class=\"headerlink\" title=\"Java 选择\"></a>Java 选择</h3><p>在 1.17 或更高版本上，Mojang 将 Minecraft Java 版的最低 Java 版本提升到了 Java 17。这意味着 Java 的安装也不像过去直接下载即可。同时，各类的 JDK 纷纷出现，而本次选择具有较好性能表现的 Alibaba Dragonwell 17。</p>\n<h4 id=\"愿景\"><a href=\"#愿景\" class=\"headerlink\" title=\"愿景\"></a>愿景</h4><p>本次目的是实现 1.20 下的 Java 端与基岩端的互联，实现无缝切换的体验，同时使服务器对于玩家的安全性和便利性有所提升，服务器流畅运行。</p>\n<h2 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h2><h3 id=\"Java-下载与安装\"><a href=\"#Java-下载与安装\" class=\"headerlink\" title=\"Java 下载与安装\"></a>Java 下载与安装</h3><h4 id=\"Java-下载\"><a href=\"#Java-下载\" class=\"headerlink\" title=\"Java 下载\"></a>Java 下载</h4><p>阿里在 GitHub 上提供了 Alibaba Dragonwell 17 的二进制发行版本，但下载速度缓慢，而 Wiki 页提供了<a href=\"https://github.com/dragonwell-project/dragonwell17/wiki/Mirrors-for-download-(%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F)\">镜像源</a>。<br>对于一般 Windows 用户，选择 Alibaba_Dragonwell_Standard_jdk-17.x.x.x.x+x_x64_windows.zip 下载即可。</p>\n<h4 id=\"Java-安装\"><a href=\"#Java-安装\" class=\"headerlink\" title=\"Java 安装\"></a>Java 安装</h4><p>对于 Oracle Java，其一键式的安装程序会解决大部分问题，但对于此，需要解压并设置环境变量手动安装。<br>在 <code>系统属性</code> 里的 <code>高级</code> 选项卡，你可以找到环境变量设置。在用户变量的 <code>Path</code> 处点击编辑，新建值为 <code>“解压后的位置”\\bin</code> 的变量即可。（注意，这里假定你之前从未安装过 Java，如果你安装过，请自行寻找如何更改 Java 默认版本。</p>\n<h3 id=\"服务端安装与初期配置\"><a href=\"#服务端安装与初期配置\" class=\"headerlink\" title=\"服务端安装与初期配置\"></a>服务端安装与初期配置</h3><h4 id=\"服务端安装\"><a href=\"#服务端安装\" class=\"headerlink\" title=\"服务端安装\"></a>服务端安装</h4><p>Fabric 为我们提供了一键式的安装体验。我们只需前往其<a href=\"https://fabricmc.net/use/installer/\">下载页面</a>，选择服务端安装选项并按照页面提示创建启动脚本，运行启动脚本稍后会自动完成安装。</p>\n<h4 id=\"初期配置\"><a href=\"#初期配置\" class=\"headerlink\" title=\"初期配置\"></a>初期配置</h4><p>为了最大化减少性能占用同时保障游戏体验，<code>view-distance</code> 被设置为 <code>4</code> ，同时为了保障正版玩家的体验 <code>online-mode</code> 被设置为 <code>true</code>。同时为了保障安全性，白名单也设置为开启。<br>至此，尝试运行并加入，一切正常。</p>\n<h3 id=\"Mod-选择\"><a href=\"#Mod-选择\" class=\"headerlink\" title=\"Mod 选择\"></a>Mod 选择</h3><h4 id=\"功能性-Mod-选择\"><a href=\"#功能性-Mod-选择\" class=\"headerlink\" title=\"功能性 Mod 选择\"></a>功能性 Mod 选择</h4><p>为了实现 Java 版与基岩版的互通，我们选择并下载了 <a href=\"https://geysermc.org/download\">Gersey 及 Floodgate</a> 作为基岩端的协议翻译与用户鉴权。注意，请在下载页面选择 Fabric 选项卡下载，之后拖入 <code>mods</code> 文件夹即可。<br>为了实现正版用户与离线玩家同时在线，我们选择 <a href=\"https://modrinth.com/mod/easyauth\">EasyAuth</a> 作为 Java 端的用户鉴权。注意，这一 Mod 依赖于 <a href=\"https://modrinth.com/mod/fabric-api\">Fabric API</a>，请一并安装。</p>\n<h4 id=\"优化性-Mod-选择\"><a href=\"#优化性-Mod-选择\" class=\"headerlink\" title=\"优化性 Mod 选择\"></a>优化性 Mod 选择</h4><p>为了优化服务器，添加了以下 Mod。</p>\n<ul>\n<li><a href=\"https://modrinth.com/mod/lithium\">Lithium</a></li>\n<li><a href=\"https://modrinth.com/mod/starlight\">Starlight</a></li>\n<li><a href=\"https://modrinth.com/mod/krypton\">Krypton</a></li>\n<li><a href=\"https://modrinth.com/mod/ferrite-core\">FerriteCore</a></li>\n</ul>\n<p>同时，这些 Mod 也可以考虑安装</p>\n<ul>\n<li><a href=\"https://modrinth.com/mod/c2me-fabric\">Concurrent Chunk Management Engine</a></li>\n<li><a href=\"https://modrinth.com/mod/vmp-fabric\">Very Many Players</a></li>\n</ul>\n<h3 id=\"后期配置\"><a href=\"#后期配置\" class=\"headerlink\" title=\"后期配置\"></a>后期配置</h3><h4 id=\"Gersey-配置\"><a href=\"#Gersey-配置\" class=\"headerlink\" title=\"Gersey 配置\"></a>Gersey 配置</h4><p>Gersey 的配置文件为 <code>\\config\\Geyser-Fabric\\config.yml</code>。这里唯一需要修改的是 <code>auth-type</code> 项，应被修改为 <code>floodgate</code>。其余选项可以按需修改。</p>\n<h4 id=\"Floodgate-配置\"><a href=\"#Floodgate-配置\" class=\"headerlink\" title=\"Floodgate 配置\"></a>Floodgate 配置</h4><p>Gersey 的配置文件为 <code>\\config\\floodgate\\config.yml</code>。我们需要进行以下操作。</p>\n<ol>\n<li>修改 <code>player-link</code> 下的 <code>require-link</code> 与 <code>enable-own-linking</code> 为 <code>true</code>。</li>\n<li>下载 <a href=\"https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/master/\">SQLite 扩展</a>（<code>floodgate-sqlite-database.jar</code>），并放置于配置文件同目录下。</li>\n</ol>\n<h4 id=\"EasyAuth-配置\"><a href=\"#EasyAuth-配置\" class=\"headerlink\" title=\"EasyAuth 配置\"></a>EasyAuth 配置</h4><p>Gersey 的配置文件为 <code>\\mods\\EasyAuth\\config.json</code>。这里唯一需要修改的是 <code>floodgateAutologin</code> 项，应被修改为 <code>true</code>。其余选项可以按需修改。</p>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><h3 id=\"测试服务器\"><a href=\"#测试服务器\" class=\"headerlink\" title=\"测试服务器\"></a>测试服务器</h3><p>此时对服务器进行测试，正版登录与离线模式（需手动编辑白名单文件）都可以登入，基岩版用户在 <a href=\"https://link.geysermc.org/\">Global Link</a> 绑定账号后可以直接登入。对于其它未绑定的基岩版玩家，可以手动编辑 <code>\\config\\floodgate\\</code> 下的数据库文件，手动录入玩家登入时服务台控制台显示的 XUID 和应该具有的 UUID 与游戏名。服务器在 JVM 预热完成后占用较低，相对流畅。</p>\n<h3 id=\"最后的话\"><a href=\"#最后的话\" class=\"headerlink\" title=\"最后的话\"></a>最后的话</h3><p>显然，这个解决方案依然具有不完善之处，比较明显的正如<code>测试服务器</code>一节中所写。这些问题依然需要日后的探索。</p>\n","excerpt":"","more":"<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>自上一次搭建 Minecraft 服务器已经过去很长时间了，这段时间内 Minecraft 与社区发生了很大的变化，但抛下各种纷扰，高版本互通服务器确实充满吸引力，也因此开启了这一旅程。</p>\n<h3 id=\"概况\"><a href=\"#概况\" class=\"headerlink\" title=\"概况\"></a>概况</h3><h4 id=\"版本与服务端选择\"><a href=\"#版本与服务端选择\" class=\"headerlink\" title=\"版本与服务端选择\"></a>版本与服务端选择</h4><p>为了实现 Java 与基岩端的互通，版本只能选择最新版本（事实上，可以通过相关插件来搭建旧版服务器，但显然会降低体验）。在高版本 Minecraft 下，官方原版服务端的性能并不佳，而 Paper 之类的插件端作为传统选择比较适宜，但本次接触到了 Fabric 这个涵盖了服务端和客户端的新一代加载器，并且这一加载器具有较多的优化 Mod 和其它辅助类 Mod，故选择 Fabric 服务端。</p>\n<h3 id=\"Java-选择\"><a href=\"#Java-选择\" class=\"headerlink\" title=\"Java 选择\"></a>Java 选择</h3><p>在 1.17 或更高版本上，Mojang 将 Minecraft Java 版的最低 Java 版本提升到了 Java 17。这意味着 Java 的安装也不像过去直接下载即可。同时，各类的 JDK 纷纷出现，而本次选择具有较好性能表现的 Alibaba Dragonwell 17。</p>\n<h4 id=\"愿景\"><a href=\"#愿景\" class=\"headerlink\" title=\"愿景\"></a>愿景</h4><p>本次目的是实现 1.20 下的 Java 端与基岩端的互联，实现无缝切换的体验，同时使服务器对于玩家的安全性和便利性有所提升，服务器流畅运行。</p>\n<h2 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h2><h3 id=\"Java-下载与安装\"><a href=\"#Java-下载与安装\" class=\"headerlink\" title=\"Java 下载与安装\"></a>Java 下载与安装</h3><h4 id=\"Java-下载\"><a href=\"#Java-下载\" class=\"headerlink\" title=\"Java 下载\"></a>Java 下载</h4><p>阿里在 GitHub 上提供了 Alibaba Dragonwell 17 的二进制发行版本，但下载速度缓慢，而 Wiki 页提供了<a href=\"https://github.com/dragonwell-project/dragonwell17/wiki/Mirrors-for-download-(%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F)\">镜像源</a>。<br>对于一般 Windows 用户，选择 Alibaba_Dragonwell_Standard_jdk-17.x.x.x.x+x_x64_windows.zip 下载即可。</p>\n<h4 id=\"Java-安装\"><a href=\"#Java-安装\" class=\"headerlink\" title=\"Java 安装\"></a>Java 安装</h4><p>对于 Oracle Java，其一键式的安装程序会解决大部分问题，但对于此，需要解压并设置环境变量手动安装。<br>在 <code>系统属性</code> 里的 <code>高级</code> 选项卡，你可以找到环境变量设置。在用户变量的 <code>Path</code> 处点击编辑，新建值为 <code>“解压后的位置”\\bin</code> 的变量即可。（注意，这里假定你之前从未安装过 Java，如果你安装过，请自行寻找如何更改 Java 默认版本。</p>\n<h3 id=\"服务端安装与初期配置\"><a href=\"#服务端安装与初期配置\" class=\"headerlink\" title=\"服务端安装与初期配置\"></a>服务端安装与初期配置</h3><h4 id=\"服务端安装\"><a href=\"#服务端安装\" class=\"headerlink\" title=\"服务端安装\"></a>服务端安装</h4><p>Fabric 为我们提供了一键式的安装体验。我们只需前往其<a href=\"https://fabricmc.net/use/installer/\">下载页面</a>，选择服务端安装选项并按照页面提示创建启动脚本，运行启动脚本稍后会自动完成安装。</p>\n<h4 id=\"初期配置\"><a href=\"#初期配置\" class=\"headerlink\" title=\"初期配置\"></a>初期配置</h4><p>为了最大化减少性能占用同时保障游戏体验，<code>view-distance</code> 被设置为 <code>4</code> ，同时为了保障正版玩家的体验 <code>online-mode</code> 被设置为 <code>true</code>。同时为了保障安全性，白名单也设置为开启。<br>至此，尝试运行并加入，一切正常。</p>\n<h3 id=\"Mod-选择\"><a href=\"#Mod-选择\" class=\"headerlink\" title=\"Mod 选择\"></a>Mod 选择</h3><h4 id=\"功能性-Mod-选择\"><a href=\"#功能性-Mod-选择\" class=\"headerlink\" title=\"功能性 Mod 选择\"></a>功能性 Mod 选择</h4><p>为了实现 Java 版与基岩版的互通，我们选择并下载了 <a href=\"https://geysermc.org/download\">Gersey 及 Floodgate</a> 作为基岩端的协议翻译与用户鉴权。注意，请在下载页面选择 Fabric 选项卡下载，之后拖入 <code>mods</code> 文件夹即可。<br>为了实现正版用户与离线玩家同时在线，我们选择 <a href=\"https://modrinth.com/mod/easyauth\">EasyAuth</a> 作为 Java 端的用户鉴权。注意，这一 Mod 依赖于 <a href=\"https://modrinth.com/mod/fabric-api\">Fabric API</a>，请一并安装。</p>\n<h4 id=\"优化性-Mod-选择\"><a href=\"#优化性-Mod-选择\" class=\"headerlink\" title=\"优化性 Mod 选择\"></a>优化性 Mod 选择</h4><p>为了优化服务器，添加了以下 Mod。</p>\n<ul>\n<li><a href=\"https://modrinth.com/mod/lithium\">Lithium</a></li>\n<li><a href=\"https://modrinth.com/mod/starlight\">Starlight</a></li>\n<li><a href=\"https://modrinth.com/mod/krypton\">Krypton</a></li>\n<li><a href=\"https://modrinth.com/mod/ferrite-core\">FerriteCore</a></li>\n</ul>\n<p>同时，这些 Mod 也可以考虑安装</p>\n<ul>\n<li><a href=\"https://modrinth.com/mod/c2me-fabric\">Concurrent Chunk Management Engine</a></li>\n<li><a href=\"https://modrinth.com/mod/vmp-fabric\">Very Many Players</a></li>\n</ul>\n<h3 id=\"后期配置\"><a href=\"#后期配置\" class=\"headerlink\" title=\"后期配置\"></a>后期配置</h3><h4 id=\"Gersey-配置\"><a href=\"#Gersey-配置\" class=\"headerlink\" title=\"Gersey 配置\"></a>Gersey 配置</h4><p>Gersey 的配置文件为 <code>\\config\\Geyser-Fabric\\config.yml</code>。这里唯一需要修改的是 <code>auth-type</code> 项，应被修改为 <code>floodgate</code>。其余选项可以按需修改。</p>\n<h4 id=\"Floodgate-配置\"><a href=\"#Floodgate-配置\" class=\"headerlink\" title=\"Floodgate 配置\"></a>Floodgate 配置</h4><p>Gersey 的配置文件为 <code>\\config\\floodgate\\config.yml</code>。我们需要进行以下操作。</p>\n<ol>\n<li>修改 <code>player-link</code> 下的 <code>require-link</code> 与 <code>enable-own-linking</code> 为 <code>true</code>。</li>\n<li>下载 <a href=\"https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/master/\">SQLite 扩展</a>（<code>floodgate-sqlite-database.jar</code>），并放置于配置文件同目录下。</li>\n</ol>\n<h4 id=\"EasyAuth-配置\"><a href=\"#EasyAuth-配置\" class=\"headerlink\" title=\"EasyAuth 配置\"></a>EasyAuth 配置</h4><p>Gersey 的配置文件为 <code>\\mods\\EasyAuth\\config.json</code>。这里唯一需要修改的是 <code>floodgateAutologin</code> 项，应被修改为 <code>true</code>。其余选项可以按需修改。</p>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><h3 id=\"测试服务器\"><a href=\"#测试服务器\" class=\"headerlink\" title=\"测试服务器\"></a>测试服务器</h3><p>此时对服务器进行测试，正版登录与离线模式（需手动编辑白名单文件）都可以登入，基岩版用户在 <a href=\"https://link.geysermc.org/\">Global Link</a> 绑定账号后可以直接登入。对于其它未绑定的基岩版玩家，可以手动编辑 <code>\\config\\floodgate\\</code> 下的数据库文件，手动录入玩家登入时服务台控制台显示的 XUID 和应该具有的 UUID 与游戏名。服务器在 JVM 预热完成后占用较低，相对流畅。</p>\n<h3 id=\"最后的话\"><a href=\"#最后的话\" class=\"headerlink\" title=\"最后的话\"></a>最后的话</h3><p>显然，这个解决方案依然具有不完善之处，比较明显的正如<code>测试服务器</code>一节中所写。这些问题依然需要日后的探索。</p>\n","path":"2023/06/13/Minecraft-1-20-互通服务器搭建记录/","permalink":"https://mybluehorizon.github.io/blog/2023/06/13/Minecraft-1-20-%E4%BA%92%E9%80%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/","tags":[{"name":"技术","_id":"cmdu5uvrl000evk7z41qh1pfo","slug":"技术","path":"tags/技术/","permalink":"https://mybluehorizon.github.io/blog/tags/%E6%8A%80%E6%9C%AF/","length":4},{"name":"Minecraft","_id":"cmdu5uvrm000kvk7z81lz402x","slug":"Minecraft","path":"tags/Minecraft/","permalink":"https://mybluehorizon.github.io/blog/tags/Minecraft/","length":2},{"name":"服务器","_id":"cmdu5uvrm000lvk7z9hqp3jz4","slug":"服务器","path":"tags/服务器/","permalink":"https://mybluehorizon.github.io/blog/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/","length":2},{"name":"游戏","_id":"cmdu5uvrn000mvk7zgn7034op","slug":"游戏","path":"tags/游戏/","permalink":"https://mybluehorizon.github.io/blog/tags/%E6%B8%B8%E6%88%8F/","length":3}],"categories":[],"prev":{"title":"云上的 Minecraft 服务器 - 服务器上云记录","date":"2023-12-01T02:24:00.000Z","slug":"云上的-Minecraft-服务器-服务器上云记录","published":true,"updated":"2025-08-02T11:19:50.799Z","_id":"cmdu5uvri0009vk7z8e8x4cab","layout":"post","photos":[],"excerpt":"","path":"2023/12/01/云上的-Minecraft-服务器-服务器上云记录/","permalink":"https://mybluehorizon.github.io/blog/2023/12/01/%E4%BA%91%E4%B8%8A%E7%9A%84-Minecraft-%E6%9C%8D%E5%8A%A1%E5%99%A8-%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E4%BA%91%E8%AE%B0%E5%BD%95/","__post":true},"next":{"title":"博客搭建小记","date":"2023-01-05T11:05:00.000Z","slug":"博客搭建小记","published":true,"updated":"2025-08-02T11:19:50.799Z","_id":"cmdu5uvrj000cvk7z6htf5g5c","layout":"post","photos":[],"excerpt":"","path":"2023/01/05/博客搭建小记/","permalink":"https://mybluehorizon.github.io/blog/2023/01/05/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%B0%8F%E8%AE%B0/","__post":true},"__post":true}